services:

  foxglove:
    image: husarion/foxglove:1.84.0
    restart: unless-stopped
    ports:
      - 8080:8080
      - 8765:8765
    volumes:
      - ./params/RosbotTeleopFull.json:/foxglove/default-layout.json
    environment:
      - DS_TYPE=foxglove-websocket
      - DS_PORT=8765
      - DS_HOST=foxglove-ds
      - UI_PORT=8080
      - DISABLE_CACHE=true
      - DISABLE_INTERACTION=false

  foxglove-ds:
    image: husarion/foxglove-bridge:humble-0.7.4-20240307
    restart: unless-stopped
    command: ros2 launch foxglove_bridge foxglove_bridge_launch.xml port:=8765 capabilities:=[clientPublish,connectionGraph,assets]

  rosbot:
    image: husarion/rosbot-xl:humble-0.10.0-20240216
    restart: unless-stopped
    # devices:
    #   - /dev/ttyUSBDB # just for firmware flashing
    #   - /dev/bus/usb/ # just for firmware flashing
    ports:
      - 192.168.77.2:8888:8888/udp
    command: >
      ros2 launch /husarion_utils/rosbot.launch.py
        mecanum:=${MECANUM:-True}
        include_camera_mount:=True
        healthcheck:=False

  # deptahai_ros driver provides /oak/rgb/image_raw/compressed topic with reliable QoS.
  # For telepresence application best_effort QoS is better, because retranmission of the image is not needed.
  # foxglove-ds creates a subscriber with the "minimum quality" QoS, which is best_effort if another
  # publisher with best_effort QoS for /oak/rgb/image_raw/compressed topic is present. Let's do it with ros2router.
  # read more:
  # 1. https://github.com/foxglove/ros-foxglove-bridge/blob/main/ros2_foxglove_bridge/src/ros2_foxglove_bridge.cpp#L498
  # 2. https://docs.ros.org/en/rolling/Concepts/Intermediate/About-Quality-of-Service-Settings.html#qos-compatibilities
  # qos-forcer:
  #   image: husarnet/ros2router:1.9.0
  #   environment:
  #     - PARTICIPANTS=lo,if-eth0 # eth0 -is the name of the network interface from a Docker network in the container
  #     - |
  #       FILTER=
  #         builtin-topics:
  #           - name: rt/oak/rgb/image_raw/compressed
  #             type: sensor_msgs::msg::dds_::CompressedImage_
  #         topics:
  #           - name: rt/oak/rgb/image_raw*
  #             qos:
  #               reliability: false
  #               durability: false
  #               history-depth: 1

  luxonis:
    image: husarion/depthai:humble-2.8.1-20240127
    restart: unless-stopped
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - ./params/oak-1-low-bandwidth.yaml:/params.yaml
    device_cgroup_rules:
      - 'c 189:* rmw'
    command: >
      ros2 launch depthai_ros_driver camera.launch.py
        params_file:=/params.yaml
        parent_frame:=camera_mount_link

  rplidar:
    image: husarion/rplidar:humble-1.0.1-20240216
    restart: unless-stopped
    devices:
      - /dev/ttyRPLIDAR:/dev/ttyUSB0
    command: >
      ros2 launch /husarion_utils/rplidar.launch.py
        serial_baudrate:=${LIDAR_BAUDRATE:-256000}
        serial_port:=/dev/ttyUSB0
        healthcheck:=False
